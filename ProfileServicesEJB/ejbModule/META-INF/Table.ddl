CREATE TABLE BANKIF.AccessRight (id VARCHAR(30) NOT NULL, actionName VARCHAR(50) NOT NULL, dateCreated TIMESTAMP, status VARCHAR(20), version INTEGER, PRIMARY KEY (id), CONSTRAINT U_CCSSGHT_ACTIONNA UNIQUE (actionName));
CREATE TABLE BANKIF.Bulletin (id VARCHAR(30) NOT NULL, approverId VARCHAR(30), dateCreated TIMESTAMP, expirationDate TIMESTAMP, initiatorId VARCHAR(30), message VARCHAR(250), status VARCHAR(20), subject VARCHAR(30), version INTEGER, PRIMARY KEY (id));
CREATE TABLE BANKIF.Profile (id VARCHAR(30) NOT NULL, branchId VARCHAR(30), changePassword SMALLINT, dateCreated TIMESTAMP, email VARCHAR(30), firstNames VARCHAR(30), ipAddress VARCHAR(30), lastLoginDate TIMESTAMP, lastName VARCHAR(30), loggedIn SMALLINT, loginAttempts INTEGER, mobileNumber VARCHAR(30), passwordExpiryDate TIMESTAMP, phoneNumber VARCHAR(30), status VARCHAR(70), userName VARCHAR(30), userPassword VARCHAR(30), version INTEGER, ROLE_ID VARCHAR(30), PRIMARY KEY (id));
CREATE TABLE BANKIF.Role (id VARCHAR(30) NOT NULL, dateCreated TIMESTAMP, roleName VARCHAR(30), status VARCHAR(20), version INTEGER, PRIMARY KEY (id));
CREATE TABLE BANKIF.RoleAccessRight (id VARCHAR(30) NOT NULL, canDo SMALLINT, dateCreated TIMESTAMP, version INTEGER, ACCESSRIGHT_ID VARCHAR(254), ROLE_ID VARCHAR(254), PRIMARY KEY (id));
ALTER TABLE BANKIF.Profile ADD FOREIGN KEY (ROLE_ID) REFERENCES BANKIF.Role (id);
ALTER TABLE BANKIF.RoleAccessRight ADD FOREIGN KEY (ACCESSRIGHT_ID) REFERENCES BANKIF.AccessRight (id);
ALTER TABLE BANKIF.RoleAccessRight ADD FOREIGN KEY (ROLE_ID) REFERENCES BANKIF.Role (id);
